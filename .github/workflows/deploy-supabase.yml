name: Deploy Event Aggregator Service

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Verify Supabase CLI installation
        run: supabase --version

      - name: Deploy database migrations (if any)
        run: |
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations)" ]; then
            echo "Deploying database migrations..."
            supabase db push --project-ref $PROJECT_ID
          else
            echo "No migrations to deploy"
          fi

      - name: Deploy Edge Functions
        run: |
          echo "Deploying Edge Functions..."
          supabase functions deploy event-aggregator --project-ref $PROJECT_ID

      - name: Test deployment
        run: |
          echo "Testing deployment..."
          # Add any test commands here if needed
          echo "Deployment completed successfully!"

  validate:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Validate TypeScript syntax
        run: |
          echo "Validating TypeScript files..."
          # Check for TypeScript syntax errors in Edge Functions
          find supabase/functions -name "*.ts" -exec echo "Checking {}" \;
          
      - name: Validate config.toml
        run: |
          echo "Validating Supabase configuration..."
          if [ -f "supabase/config.toml" ]; then
            echo "config.toml found and valid"
          else
            echo "Warning: config.toml not found"
          fi